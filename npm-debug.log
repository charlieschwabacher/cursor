0 info it worked if it ends with ok
1 verbose cli [ '/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/bin/iojs',
1 verbose cli   '/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.7.4
3 info using node@v1.6.3
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/charlieschwabacher/Code/cursor',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/charlieschwabacher/.npm/cursor/0.0.0/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/charlieschwabacher/.npm/cursor/0.0.0/package.tgz',
9 verbose tar pack   '/Users/charlieschwabacher/Code/cursor' ]
10 verbose tarball /Users/charlieschwabacher/.npm/cursor/0.0.0/package.tgz
11 verbose folder /Users/charlieschwabacher/Code/cursor
12 info prepublish cursor@0.0.0
13 verbose addLocalTarball adding from inside cache /Users/charlieschwabacher/.npm/cursor/0.0.0/package.tgz
14 silly cache afterAdd cursor@0.0.0
15 verbose afterAdd /Users/charlieschwabacher/.npm/cursor/0.0.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/charlieschwabacher/.npm/cursor/0.0.0/package/package.json written
17 silly publish { name: 'cursor',
17 silly publish   version: '0.0.0',
17 silly publish   description: 'immutable data structure with cursors',
17 silly publish   keywords: [ 'cursor' ],
17 silly publish   license: 'MIT',
17 silly publish   author:
17 silly publish    { name: 'Charlie Schwabacher:',
17 silly publish      email: 'coschwabacher@gmail.com' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https://github.com/charlieschwabacher/cursor.git' },
17 silly publish   bugs: { url: 'https://github.com/charlieschwabacher/cursor/issues' },
17 silly publish   main: 'lib/cursor.js',
17 silly publish   files: [ 'lib/' ],
17 silly publish   scripts: { test: 'mocha', build: 'babel src --out-dir lib' },
17 silly publish   dependencies: {},
17 silly publish   devDependencies: { babel: '^5.1.10', mocha: '^2.2.4' },
17 silly publish   readme: 'cursor\n======\n\nCursor is a javascript library for reading from and updating an immutable data\nstructure.  It is designed w/ the following goals in mind:\n\n\n- to provide a **simple, familiar, human friendly api** - working with immutable\ndata shouldn\'t be hard - cursors expose get, set, and merge which work exactly\nas you would exepect them to.\n\n- to **enforce immutability** - cursor uses Object.freeze on immutible data to\nprevent bugs caused by unexpected changes.\n\n- to **work well with**, but **avoid coupling to react.js** - data can easily be\nshared between react and other parts of an app, or between multiple top level\nreact components in different parts of a page.\n\n- to be **\'pure render\' friendly** - cursor objects are cached so that any two\ncursors pointing to the same object will be referentially equal, allowing them\nto work with react\'s pure render mixin.\n\n\n\ncreating a cursor\n-----------------\n\ncreate a cursor by passing some initial data and an onChange callback\n\n```javascript\nCursor.create(initialData, function(rootCursor) { ... })\n```\n\nThe initialData object passed in to the cursor will be frozen.  The `onChange`\ncallback will be called one time initially and any time the data is changed.\nIf you are using Cursor with React, this callback is a great place to render\ncomponents.\n\n\n\nusing cursors\n-------------\n\nCursor objects store a path through the root data object, and expose methods to\nread or update data at their path or below it.\n\n**Cursor API**:\n\n- `cursor(path)` - creates and returns a new subcursor appending the path\nargument to the cursor\'s current path. References to cursors are cached so that\ntwo cursors w/ identical path will be referentially equal as long as thir\ntarget object is unchanged.\n\n- `get(path)` - returns the value at path\n\n- `set(path, value)` - replaces the value at path with a new value.  Objects\npassed to set are frozen.\n\n- `has(path)` - returns true if there is a value at path that is not null or\nundefined\n\n- `delete(path)` - deletes the value at path\n\n- `merge(data)` - replaces the value at path with a new object created by deeply\nmerging the current value and the provided argument\n\n- `bind(path[, pre])` - returns a setter function for the provided path.  If the\noptional `pre` argument is included, it will be composed with the setter to\npreproccess values.\n\n\n**Array only methods**:\n(these will throw errors if the value at their path is not an array)\n\n- `splice(path, start, deleteCount, ...elements)` - similar to Array.splice,\nthis inserts or deletes from the array at path.\n\n- `push(path, value)` - adds a value to the end of the array at path.\n\n- `pop(path)` - removes the value from the end of the array at path, and returns\nit.\n\n- `unshift(path, value)` - adds a value to the beginning of the array at path.\n\n- `shift(path)` - removes and returns the value from the beginning of the array\nat path.\n\n\n\nPath arguments are flexible - they can be omitted to reference the value the\ncursor references directly, they can be be a single string to reference a\nproperty of an object the cursor references, or an array of strings to reach\ndeep inside nested objects.\n\n\n\nan example\n----------\n\n```javascript\n// creating an immutable data structure\n\ninitialData = {\n  user: {\n    id: 1,\n    name: \'Jane Smith\',\n    playcount: 5\n  },\n  playlist: {\n    name: \'Jamz\',\n    songs: [\n      {\n        name: \'You Dropped A Bomb On Me\',\n        artist: \'The Gap Band\'\n      }, {\n        name: \'We Dont Have To Take Our Clothes Off\',\n        artist: \'Jermaine Stewart\'\n      }\n    ]\n  }\n}\n\nCursor.create(initialData, function(root) {\n  React.render(<Playlist data={root.cursor(\'playlist\')}/>, document.body)\n})\n\n\n\n// reading data\n\nroot.get()\n// returns the root javacsript object\n\nroot.get(\'user\')\n// returns {id: 1, name: \'Jane Smith\'}\n\nroot.get([\'playlist\', \'songs\', 0, \'artist\'])\n// returns \'The Gap Band\'\n\nvar playlistCursor = root.cursor(\'playlist\')\n// creates a new cursor referencing the playlist object\n\nplaylistCursor.get(\'name\')\n// returns \'Jamz\'\n\nsongCursor = playlistCursor.cursor(0)\n// returns a new cursor referencing the song object from the playlist at index 0\n\n\n\n// updating data\n\nroot.get(\'user\').playcount = 6\n// THIS DOES NOT WORK - playcount can\'t be modified because object has been\n// frozen.  In strict mode this will throw an error.\n\nroot.set([\'user\', \'playcount\'], 6)\n// sets user playcount to six\n\nroot.merge(user: playcount: 7)\n// sets user playcount to seven\n\nvar callback = root.bind([\'user\', \'name\'], function(v) {return v.toUpperCase()})\ncallback(\'Kenny G\')\n// sets user name to \'KENNY G\'\n\nroot.push([\'playlist\', \'songs\'], {\n  name: \'Buffalo Stance\',\n  artist: \'Neneh Cherry\'\n})\n// adds a song to the end of the songs array\n```\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'f475facbab5837d3f9057b01a71ea325942dc0f2',
17 silly publish   homepage: 'https://github.com/charlieschwabacher/cursor',
17 silly publish   _id: 'cursor@0.0.0',
17 silly publish   _shasum: '223bbda547097ea37ab9c60520eb71daadf44576',
17 silly publish   _from: '.' }
18 silly mapToRegistry name cursor
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/cursor
22 verbose publish registryBase https://registry.npmjs.org/
23 silly publish uploading /Users/charlieschwabacher/.npm/cursor/0.0.0/package.tgz
24 verbose request uri https://registry.npmjs.org/cursor
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 00:35:33
27 verbose request using bearer token for auth
28 verbose request id dce22c42339e808f
29 http request PUT https://registry.npmjs.org/cursor
30 http 404 https://registry.npmjs.org/cursor
31 verbose headers { date: 'Fri, 17 Apr 2015 05:35:33 GMT',
31 verbose headers   server: 'Apache',
31 verbose headers   'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=0',
31 verbose headers   'content-length': '21',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   'x-served-by': 'cache-atl6225-ATL',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1429248933.588026,VS0,VE278',
31 verbose headers   'keep-alive': 'timeout=10, max=50',
31 verbose headers   connection: 'Keep-Alive' }
32 verbose request invalidating /Users/charlieschwabacher/.npm/registry.npmjs.org/cursor on PUT
33 error publish Failed PUT 404
34 verbose stack Error: Not found : cursor
34 verbose stack     at CachingRegistryClient.<anonymous> (/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
34 verbose stack     at Request._callback (/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
34 verbose stack     at Request.self.callback (/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/lib/node_modules/npm/node_modules/request/request.js:344:22)
34 verbose stack     at emitTwo (events.js:87:13)
34 verbose stack     at Request.emit (events.js:169:7)
34 verbose stack     at Request.<anonymous> (/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/lib/node_modules/npm/node_modules/request/request.js:1239:14)
34 verbose stack     at emitOne (events.js:82:20)
34 verbose stack     at Request.emit (events.js:166:7)
34 verbose stack     at IncomingMessage.<anonymous> (/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/lib/node_modules/npm/node_modules/request/request.js:1187:12)
34 verbose stack     at emitNone (events.js:72:20)
35 verbose statusCode 404
36 verbose pkgid cursor
37 verbose cwd /Users/charlieschwabacher/Code/cursor
38 error Darwin 14.3.0
39 error argv "/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/bin/iojs" "/Users/charlieschwabacher/.nvm/versions/io.js/v1.6.3/bin/npm" "publish"
40 error node v1.6.3
41 error npm  v2.7.4
42 error code E404
43 error 404 Not found : cursor
43 error 404
43 error 404 'cursor' is not in the npm registry.
43 error 404 You should bug the author to publish it (or use the name yourself!)
43 error 404
43 error 404 Note that you can also install from a
43 error 404 tarball, folder, http url, or git url.
44 verbose exit [ 1, true ]
