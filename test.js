// Generated by CoffeeScript 1.7.1
(function() {
  var Cursor, assert, cursor, cursor1, cursor2, initialData, root;

  Cursor = require('./index');

  assert = require('assert');

  root = null;

  initialData = {
    a: {
      b: {
        c: 1,
        d: 2
      }
    }
  };

  Cursor.create(initialData, function(cursor) {
    return root = cursor;
  });

  assert(root.get() === initialData);

  assert(root.get('a') === root.get('a'));

  assert(root.get(['a', 'b', 'c']) === 1);

  assert(root.get(['a', 'b', 'd']) === 2);

  root.set(['a', 'e'], 3);

  assert(root.get(['a', 'e']) === 3);

  assert(root.get() !== initialData);

  assert(root.get('a') !== initialData.a);

  assert(root.get(['a', 'b']) === initialData.a.b);

  assert(root.cursor('a') === root.cursor('a'));

  assert(root.cursor(['a', 'b']) === root.cursor('a').cursor('b'));

  cursor = root.cursor('a');

  root.set(['a', 'e'], 4);

  assert(root.cursor('a') !== cursor);

  cursor = root.cursor(['a', 'e']);

  cursor.set([], 4);

  assert(root.get(['a', 'e']) === 4);

  assert(root.cursor(['a', 'e']) !== cursor);

  cursor1 = root.cursor(['a', 'b', 'c']);

  cursor2 = root.cursor(['a', 'b', 'd']);

  assert(cursor1.get() === 1);

  assert(cursor2.get() === 2);

  cursor1.set([], 5);

  assert(cursor1.get() === 5);

  assert(cursor2.get() === 2);

  cursor2.set([], 6);

  assert(cursor1.get() === 5);

  assert(cursor2.get() === 6);

  assert(root.get(['a', 'b', 'c']) === 5);

  assert(root.get(['a', 'b', 'd']) === 6);

  root.merge({
    a: {
      b: {
        c: 8,
        d: 9
      }
    }
  });

  assert(root.get(['a', 'b', 'c']) === 8);

  assert(root.get(['a', 'b', 'd']) === 9);

  assert(root.get(['a', 'e']) === 4);

  cursor1 = root.cursor(['a', 'b']);

  cursor2 = root.cursor(['a', 'e']);

  root.merge({
    a: {
      b: {
        c: 10
      }
    }
  });

  assert(root.cursor(['a', 'b']) !== cursor1);

  assert(root.cursor(['a', 'e']) === cursor2);

  console.log('all good');

}).call(this);
